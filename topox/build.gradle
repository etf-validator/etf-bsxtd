///////////////////////////////////////////////////////////////////////////////////////
//
// ETF-TopoX
//
///////////////////////////////////////////////////////////////////////////////////////

group = 'de.interactive_instruments.etf.testdriver.bsxm'
description = "Extension module for the ETF Basex testdriver to create topological graph structures"

configurations {
	umlDoclet
    runtime.exclude group: "org.slf4j", module: "slf4j-nop"
}

dependencies {
	compile group: 'org.jetbrains.intellij.deps', name: 'trove4j', version: '1.0.20181211'

	umlDoclet "nl.talsmasoftware:umldoclet:1.0.16"

	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: etf_junitTestVersion
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: etf_junitTestVersion
	testCompile 'com.tngtech.archunit:archunit-junit5-api:0.9.1'
	testRuntime 'com.tngtech.archunit:archunit-junit5-engine:0.9.1'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: etf_logbackVersion

	testCompile "org.basex:basex:$basexVersion"
	testRuntime "org.basex:basex:$basexVersion"
	compileOnly "org.basex:basex-api:$basexApiVersion"
	testCompile "org.basex:basex-api:$basexApiVersion"
}

def dependencyLibs =
		configurations.compile.filter { it.name.startsWith('trove') } +
		configurations.compile.filter { it.name.startsWith('ii-commons-util') }

jar {
	archiveName = "topox.jar"
}

javadoc {
	source = sourceSets.main.allJava
	options.docletpath = configurations.umlDoclet.files.asType(List)
	options.doclet = "nl.talsmasoftware.umldoclet.UMLDoclet"
	options.addStringOption "umlImageFormat", "SVG"
	options.addStringOption "umlIncludeHyperlinks", "true"
	options.addStringOption "umlBasePath", "docs/javadoc"
	destinationDir = file("$projectDir/docs/javadoc")
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}


task xar(type: Jar, dependsOn: jar) {
	dependsOn = ["generateBaseXPackagingFile", "jar"]
	doFirst {
		manifest {
			attributes(
					jar.manifest.getAttributes()
			)
		}
	}
	group = 'build'
	archiveName = 'etf-topox.xar'
	extension = 'xar'
	into('topox') {
		from jar
		from dependencyLibs
		from file("$projectDir/src/main/xquery/TopoX.xq")
	}

	into('') {
		from file("$projectDir/src/packaging/expath-pkg.xml")
		filter{ it.replaceAll('@@libVersion@@', majorVersion+"."+minorVersion+"."+bugfixVersion )}
	}
	from file("$buildDir/generated/basex.xml")
}

def allLibs = configurations.runtime -
		configurations.compile.filter { it.name.startsWith('etf-') } -
		configurations.compile.filter { it.name.startsWith('tika-') } -
		configurations.compile.filter { it.name.startsWith('slf4j-api') } -
		configurations.compile.filter { it.name.startsWith('log4j') && !it.name.startsWith('log4j-over-slf4j') } -
		configurations.compile.filter { it.name.startsWith('jetty') } -
		configurations.compile.filter { it.name.startsWith('xml-apis') } -
		configurations.compile.filter { it.name.startsWith('commons-') } -
		configurations.compile.filter { it.name.startsWith('xercesImpl') }

task ('generateBaseXPackagingFile') {
	doLast {
		def dependencies = allLibs.collect{c -> ('<jar>'+c.name+'</jar>')}

		new File("$buildDir/generated", "basex.xml").text = """\
			<package xmlns="http://www.basex.org/modules/pkg">
				<jar>topox.jar</jar>
				${dependencies.join(System.getProperty("line.separator"))}
                <class>de.interactive_instruments.etf.bsxm.TopoX</class>
            </package>"""
	}
}

test {} // Support IntelliJ click
apply from: '../junit-xar.gradle'
