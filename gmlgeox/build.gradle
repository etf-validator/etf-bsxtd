///////////////////////////////////////////////////////////////////////////////////////
//
// ETF-GmlGeoX
//
///////////////////////////////////////////////////////////////////////////////////////

group = 'de.interactive_instruments.etf.testdriver.bsxm'
description = "Basex XQuery module for validation and comparison of gml geometry data."


apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'


configurations {
	runtime.exclude group: "org.slf4j", module: "slf4j-nop"
}

dependencies {

	compile('org.apache.santuario:xmlsec:2.2.3') {
		exclude group: 'org.slf4j'
	}

    // Overwrite
	compile group: 'org.codehaus.woodstox', name: 'woodstox-core-asl', version: '4.4.1'


	// Overwrite
	compile('com.vividsolutions:jts:1.13')
	
	// https://mvnrepository.com/artifact/org.jgrapht/jgrapht-core
    compile group: 'org.jgrapht', name: 'jgrapht-core', version: '1.3.1'

	// Overwrite
	compile('org.apache.httpcomponents:httpclient:4.5.1') {
		exclude group: 'commons-logging'
	}

	// Overwrite
	compile('commons-io:commons-io:2.5')

	// Overwrite
	compile('jaxen:jaxen:1.1.6') {
		exclude group: 'xerces'
		exclude group: 'xml-apis'
	}

	// Degree core for geometry validation
	compile("org.deegree:deegree-core-base:$deegreeVersion") {
		exclude group: 'org.slf4j'
		exclude group: 'xerces'
		exclude group: 'xml-apis'
		exclude group: 'com.h2database'
		exclude group: 'org.postgis'
		exclude group: 'postgresql'
		exclude group: 'org.postgresql'
		exclude group: 'commons-logging'
		exclude group: 'com.google.code.gson'
	}

	compile('com.github.davidmoten:rtree:0.8.7')

	compile('org.apache.commons:commons-jcs-core:2.1')
	compile 'com.github.ben-manes.caffeine:caffeine:2.5.2'
		
	compile 'com.google.guava:guava:24.0-jre'

	compile group: 'org.slf4j', name: 'slf4j-api', version: etf_slf4jApiVersion

	compile group: 'xerces', name: 'xercesImpl', version: etf_xercesVersion

	compile group: 'xml-apis', name: 'xml-apis', version: etf_xmlApisVersion

	compile('xalan:xalan:2.7.2') {
		exclude group: 'xerces'
		exclude group: 'xml-apis'
	}

	// https://mvnrepository.com/artifact/org.jetbrains/annotations
	compile group: 'org.jetbrains', name: 'annotations', version: '16.0.2'

	compile group: 'javax.activation', name: 'activation', version: etf_activationVersion
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: etf_jaxbVersion
	compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: etf_jaxbVersion

	compileOnly "org.basex:basex:$basexVersion"
	testRuntime "org.basex:basex:$basexVersion"
	compileOnly "org.basex:basex-api:$basexApiVersion"
	testCompile "org.basex:basex-api:$basexApiVersion"

    testCompile group: 'net.sf.saxon', name: 'Saxon-HE', version: '9.7.0-4'
	testCompile group: 'ch.qos.logback', name: 'logback-classic', version: etf_logbackVersion
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: etf_junitTestVersion
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: etf_junitTestVersion
}

def allLibs = configurations.runtime + configurations.compile -
		configurations.compile.filter { it.name.startsWith('basex') } -
		configurations.compile.filter { it.name.startsWith('jcl') } -
		configurations.compile.filter { it.name.startsWith('commons-fileupload') } -
		configurations.compile.filter { it.name.startsWith('xml-apis') } -
		configurations.compile.filter { it.name.startsWith('xmldb-api') } -
		configurations.compile.filter { it.name.startsWith('slf4j-log4j12') } -
		configurations.compile.filter { it.name.startsWith('milton') }

jar {
	archiveName = "gmlgeox.jar"
}

javadoc {
	destinationDir = file("$projectDir/docs/javadoc")
    // without the -quiet option, the build fails
    options.addStringOption('Xdoclint:none', '-quiet')
}

task xar(type: Jar) {
	dependsOn = ["generateBaseXPackagingFile", "jar"]
	doFirst {
		manifest {
			attributes(
					jar.manifest.getAttributes()
			)
		}
	}
	group = 'build'
	archiveName = 'etf-gmlgeox.xar'
	extension = 'xar'
	into('geox') {
		from jar
		from allLibs
		from file("$projectDir/src/main/xquery/GmlGeoX.xq")
		from file("$projectDir/src/main/xquery/GraphX.xq")
		from file("$projectDir/src/main/xquery/GeoValidationX.xq")
	}

	into('') {
		from file("$projectDir/src/packaging/expath-pkg.xml")
		filter{ it.replaceAll('@@libVersion@@', project.version)}
	}
	from file("$buildDir/generated/basex.xml")
}

task ('generateBaseXPackagingFile') {
	doLast {
		def dependencies = allLibs.collect{c -> ('<jar>'+c.name+'</jar>')}

		new File("$buildDir/generated").mkdir()
		new File("$buildDir/generated", "basex.xml").text = """\
			<package xmlns="http://www.basex.org/modules/pkg">
				<jar>gmlgeox.jar</jar>
				${dependencies.join(System.getProperty("line.separator"))}
                <class>de.interactive_instruments.etf.bsxm.GmlGeoX</class>
            </package>"""
	}
}

task listrepos {
	doLast {
		println "Repositories:"
		project.repositories.each { println "Name: " + it.name + "; url: " + it.url }
	}
}

test {
	if(Integer.valueOf(org.gradle.internal.jvm.Jvm.current().getJavaVersion().getMajorVersion())>8) {
		jvmArgs = ["--add-opens", "java.base/jdk.internal.loader=ALL-UNNAMED"]
	}
} // Support IntelliJ click
apply from: '../junit-xar.gradle'
